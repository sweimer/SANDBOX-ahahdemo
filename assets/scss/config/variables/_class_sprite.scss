/*
SCSS variables are information about icon's compiled state, stored under its original file name

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/

$button-blog-name: 'button-blog';
$button-blog-x: 0;
$button-blog-y: 0;
$button-blog-offset-x: 0;
$button-blog-offset-y: 0;
$button-blog-width: 35px;
$button-blog-height: 35px;
$button-blog-total-width: 105px;
$button-blog-total-height: 70px;
$button-blog-image: '../../images/sprite.png';
$button-blog: (0, 0, 0, 0, 35px, 35px, 105px, 70px, '../../images/sprite.png', 'button-blog',);
$button-facebook-name: 'button-facebook';
$button-facebook-x: 35px;
$button-facebook-y: 0;
$button-facebook-offset-x: -35px;
$button-facebook-offset-y: 0;
$button-facebook-width: 35px;
$button-facebook-height: 35px;
$button-facebook-total-width: 105px;
$button-facebook-total-height: 70px;
$button-facebook-image: '../../images/sprite.png';
$button-facebook: (35px, 0, -35px, 0, 35px, 35px, 105px, 70px, '../../images/sprite.png', 'button-facebook',);
$button-rss-name: 'button-rss';
$button-rss-x: 0;
$button-rss-y: 35px;
$button-rss-offset-x: 0;
$button-rss-offset-y: -35px;
$button-rss-width: 35px;
$button-rss-height: 35px;
$button-rss-total-width: 105px;
$button-rss-total-height: 70px;
$button-rss-image: '../../images/sprite.png';
$button-rss: (0, 35px, 0, -35px, 35px, 35px, 105px, 70px, '../../images/sprite.png', 'button-rss',);
$button-twitter-name: 'button-twitter';
$button-twitter-x: 35px;
$button-twitter-y: 35px;
$button-twitter-offset-x: -35px;
$button-twitter-offset-y: -35px;
$button-twitter-width: 35px;
$button-twitter-height: 35px;
$button-twitter-total-width: 105px;
$button-twitter-total-height: 70px;
$button-twitter-image: '../../images/sprite.png';
$button-twitter: (35px, 35px, -35px, -35px, 35px, 35px, 105px, 70px, '../../images/sprite.png', 'button-twitter',);
$button-youtube-name: 'button-youtube';
$button-youtube-x: 70px;
$button-youtube-y: 0;
$button-youtube-offset-x: -70px;
$button-youtube-offset-y: 0;
$button-youtube-width: 35px;
$button-youtube-height: 35px;
$button-youtube-total-width: 105px;
$button-youtube-total-height: 70px;
$button-youtube-image: '../../images/sprite.png';
$button-youtube: (70px, 0, -70px, 0, 35px, 35px, 105px, 70px, '../../images/sprite.png', 'button-youtube',);
$spritesheet-width: 105px;
$spritesheet-height: 70px;
$spritesheet-image: '../../images/sprite.png';
$spritesheet-sprites: ($button-blog, $button-facebook, $button-rss, $button-twitter, $button-youtube,);
$spritesheet: (105px, 70px, '../../images/sprite.png', $spritesheet-sprites,);

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
